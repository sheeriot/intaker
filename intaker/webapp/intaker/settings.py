"""
Django settings for intaker project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-%axnbk+ux)!nz9p9!g%evn+%&5%#8#jgq$6^d82wfs7bh-!&ir'
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
if os.environ.get('DJANGO_DEBUG') == 'False':
    DEBUG = False
else:
    DEBUG = True

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

SERVERNAME1 = os.environ.get('SERVERNAME1')
SERVERNAME2 = os.environ.get('SERVERNAME2')

ALLOWED_HOSTS = ["127.0.0.1", SERVERNAME1, SERVERNAME2]
CSRF_TRUSTED_ORIGINS = [
    'https://' + SERVERNAME1,
    'https://' + SERVERNAME2,
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.admin',
    'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_bootstrap_icons',
    'tz_detect',
    'crispy_forms',
    'crispy_bootstrap5',
    'accounts.apps.AccountsConfig',
    'rocks.apps.RocksConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'tz_detect.middleware.TimezoneMiddleware',
]

ROOT_URLCONF = 'intaker.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['intaker/templates', 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'intaker.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

SQLITE_FILE = os.environ.get('SQLITE_FILE')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'NAME': SQLITE_FILE
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Setup Content Security Policy
# CSP_DEFAULT_SRC = (
#     "'self'",
# )
# CSP_STYLE_SRC = (
#     "'self'",
#     "'unsafe-inline'",
#     'https://cdn.jsdelivr.net',
#     'https://*.bootstrapcdn.com',
#     'https://cdnjs.cloudflare.com',
# )
# CSP_SCRIPT_SRC = (
#     "'self'",
#     "'unsafe-inline'",
#     'https://cdn.jsdelivr.net',
#     'https://ajax.googleapis.com',
#     'https://code.jquery.com',
#     'https://cdnjs.cloudflare.com',
# )
# CSP_IMG_SRC = (
#     "'self'",
#     'data:',
#     'https://tile.openstreetmap.org',
#     'https://cdn.jsdelivr.net',
#     'https://*.tile.opentopomap.org',
#     'https://*.basemaps.cartocdn.com',
#     'https://cdnjs.cloudflare.com',
# )
# CSP_FONT_SRC = (
#     "'self'",
#     'https://cdn.jsdelivr.net',
#     'https://cdnjs.cloudflare.com',
#     'https://netdna.bootstrapcdn.com',
# )

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
STATIC_ROOT = '/opt/app/static_files/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Crispy Template Pack
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Sessions
SESSION_ENGINE = "django.contrib.sessions.backends.file"
SESSION_COOKIE_AGE = 1 * 24 * 60 * 60  # 1 day cookie
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

DATA_UPLOAD_MAX_NUMBER_FIELDS = 64

BOOTSTRAP5 = {
    "css_url": {
        "href": "{% static 'css/custom-bootstrap.css' %}",  # your custom CSS file
    },
}
LOGIN_REDIRECT_URL = '/'